/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from 'bn.js'
import { Contract, ContractOptions } from 'web3-eth-contract'
import { EventLog } from 'web3-core'
import { EventEmitter } from 'events'
import { ContractEvent, Callback, TransactionObject, BlockType } from './types'

interface EventOptions {
  filter?: object
  fromBlock?: BlockType
  topics?: string[]
}

export class ISetupWizard extends Contract {
  constructor(jsonInterface: any[], address?: string, options?: ContractOptions)

  clone(): ISetupWizard

  methods: {
    registerVk(
      numOfInputs: number | string,
      numOfOutputs: number | string,
      alfa1: (number | string)[],
      beta2: (number | string)[][],
      gamma2: (number | string)[][],
      delta2: (number | string)[][],
      ic: (number | string)[][],
    ): TransactionObject<void>

    makeUserInteractable(addr: string): TransactionObject<void>

    makeChallengeable(
      depositChallenge: string,
      headerChallenge: string,
      migrationChallenge: string,
      utxoTreeChallenge: string,
      withdrawalTreeChallenge: string,
      nullifierTreeChallenge: string,
      txChallenge: string,
    ): TransactionObject<void>

    makeMigratable(addr: string): TransactionObject<void>

    allowMigrants(migrants: string[]): TransactionObject<void>

    completeSetup(): TransactionObject<void>
  }

  events: {
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter
  }
}
